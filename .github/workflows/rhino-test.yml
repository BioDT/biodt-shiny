name: Rhino Test
on: push
permissions:
  contents: read
  packages: write
jobs:
  main:
    name: Run tests
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/biodt/shiny-base:latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build JavaScript
        if: always()
        shell: Rscript {0}
        run: rhino::build_js()

      - name: Build Sass
        if: always()
        shell: Rscript {0}
        run: rhino::build_sass()

      - name: Run R unit tests
        if: always()
        shell: Rscript {0}
        run: rhino::test_r()

      - name: Run Cypress end-to-end tests
        if: always()
        uses: cypress-io/github-action@v6
        with:
          working-directory: .rhino # Created by earlier commands which use Node.js
          start: npm run run-app
          project: ../tests
          wait-on: 'http://localhost:3333/'
          wait-on-timeout: 60

  build-base:
    needs: main
    if: |
      success() && 
      contains(github.event.head_commit.modified, 'renv.lock')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Build and push base image
        working-directory: containers/base
        run: |
          make build
          make push

  build-app:
    needs: [main, build-base]
    if: |
      success() && 
      (contains(github.event.head_commit.modified, 'app/') || 
       contains(github.event.head_commit.modified, 'Dockerfile'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Build and push app image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/biodt/shiny-app:latest
            ghcr.io/biodt/shiny-app:${{ github.sha }}